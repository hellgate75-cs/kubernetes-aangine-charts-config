{{range services}} {{$name := .Name}} {{$service := service .Name}}
upstream {{$name}} {
  least_conn;
  {{range $service}}server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
  {{else}}server 127.0.0.1:65535; # force a 502{{end}}
} {{end}}

server {
  listen 80 default_server;

  charset utf-8;
 
  location / {
    root /usr/share/nginx/html/;
    index index.html;
  }

  client_max_body_size 10M;


  location /stub_status {
    stub_status;
  }

{{range services}} {{$name := .Name}}
  location ~ ^/{{$name}}/(.*)$ {

    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Expose-Headers "Authorization, Origin, Access-Control-Allow-Origin, Access-Control-Allow-Methods";

    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Methods "POST, GET, OPTIONS, PUT, DELETE, HEAD, PATCH";
      add_header Access-Control-Allow-Headers "Origin, Authorization, Accept, Content-Type";
      add_header Access-Control-Allow-Credentials true;
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 200;
   }


    proxy_pass http://{{$name}}/$1$is_args$args;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
  }
{{end}}
}
